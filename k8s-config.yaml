apiVersion: apps/v1
kind: Deployment
metadata:
  name: entity-graph-service
  labels:
    app: entity-graph-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: entity-graph-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: entity-graph-service
    spec:
      containers:
        - image: docker.io/amannm/entity-graph-service
          imagePullPolicy: Always
          name: entity-graph-service
          ports:
            - name: http
              containerPort: 8080
            - name: health
              containerPort: 8081
          resources:
            requests:
              cpu: 100m
              memory: 256M
          livenessProbe:
            httpGet:
              path: /live
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: entity-graph-service
spec:
  type: NodePort
  selector:
    app: entity-graph-service
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: health
      protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: cauldron-api-certificate
spec:
  domains:
    - api.cauldron.systems
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: entity-graph-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: cauldron-api
    networking.gke.io/managed-certificates: cauldron-api-certificate
spec:
  backend:
    serviceName: entity-graph-service
    servicePort: 8080